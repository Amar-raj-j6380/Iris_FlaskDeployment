# name: Run Python Tests
# on:
#   push:
#     branches:
#     - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2 
#       - name: Install Python 3
#         uses: actions/setup-python@v1 
#         with:
#           python-version: 3.9
#       - name: Install dependencies 
#         run: |
#           python -m pip install --upgrade pip 
#           pip install pytest
#           pip install -r requirements.txt
#       - name: Run tests with pytest
#         run: pytest

#     # ajjajjajajajaj


name: Deploy to Amazon ECS   #explained the process to the class
on:
	push:
	branches:
	- main

env:
	AWS REGION: us-east-1
	ECR_REPOSITORY: mlopsapril
	ECS_SERVICE: mlopsservice
	ECS_CLUSTER: mlopsaprilcluster
	ECS_TASK_DEFINITION: task-definition.json # set this to the path to your Amazon ECS task definition
	CONTAINER_NAME: mlopsaprilcontainer

jobs:
	job1:
		runs-on: ubuntu-latest
		steps:
		- uses: actions/checkout@v2 
		- name: Install Python 3
		  uses: actions/setup-python@v1
		  with:
			python-version: 3.9
		- name: Install dependencies
		  run: |
			python - pip install --upgrade pip
			pip install pytest	
			pip install -r requirements.txt
        - name: Run tests with pytest
          run: pytest
		  
	job2:
		needs: job1
		runs-on: ubuntu-latest
		environment: production
		
		steps:
		- name: Checkout
				uses: actions/checkout@v3
		- name: Configure AWS credentials
			uses: aws-actions/configure-aws-credentials@v1
		with:
			aws-access-key-id: ${{ secrets. AWS_ACCESS_KEY_ID |}}||
			aws-secret-access-key: ${{ secrets. AWS_SECRET_ACCESS_KEY}} 
			aws-region: ${{env.AWS_REGION}}
			


		- name: Login to Amazon ECR
			id: login-ecr
			uses: aws-actions/amazon-ecr-login@v1
		- name: Build, tag, and push image to Amazon ECR
			id: build-image
		env:
			ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }} 
			IMAGE TAG: ${{ github.sha}}
		run: |
			docker build -t SECR REGISTRY/SECR REPOSITORY: $IMAGE_TAG.
			docker push $ECR_REGISTRY/SECR REPOSITORY: $IMAGE_TAG
			echo "image-$ECR REGISTRY/SECR REPOSITORY: $IMAGE TAG" >> $GITHUB_OUTPUT		
	ï»¿
		- name: Fill in the new image ID in the Amazon ECS task definition 
			id: task-def
			uses: aws-actions/amazon-ecs-render-task-definition@vi
			with:
				task-definition: $({ env.ECS TASK_DEFINITION}}
				container-name: $(( env.CONTAINER_NAME}}
				image: $(( steps.build-image.outputs.image }}
		- name: Deploy Anazon ECS task definition
			uses: aws-actions/amazon-ecs-deploy-task-definition@vi 
			with:
				task-definition: $(( steps.task-def.outputs.task-definition }} 
				service: $({ env.ECS_SERVICE}} 
				cluster: $(( env.ECS_CLUSTER }}
				wait-for-service-stability: true

				
				
		
		